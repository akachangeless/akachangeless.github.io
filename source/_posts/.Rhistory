### Normal distribution
N1 <- rnorm(5000, mean = 4, sd = 1)
N2 <- rnorm(5000, mean = 4, sd = 2)
N3 <- rnorm(5000, mean = 4, sd = 3)
# Plotting
plot(density(N1), xlab = "",main = "Normal Distribution", xlim = c(-2,10))
lines(density(N2), col = "red")
lines(density(N3), col = "blue")
text (7, 0.39, c("mean = 4, sd = 1"), cex = 0.9)
text (7, 0.2, c("mean = 4, sd = 2"), col = "red", cex = 0.9)
text (1, 0.1, c("mean = 4, sd = 3"), col = "blue",  cex = 0.9)
### Poisson distribution
P1 <- rpois(10000, 1)
P2 <- rpois(10000, 2)
P3 <- rpois(10000, 4)
?rpois
Density, distribution function, quantile function and random generation for the Poisson distribution with parameter lambda.
# Plotting
tP1 <- table(P1); l1 <- length(tP1)
Density, distribution function, quantile function and random generation for the Poisson distribution with parameter lambda.
tP2 <- table(P2); l2 <- length(tP2)
Density, distribution function, quantile function and random generation for the Poisson distribution with parameter lambda.
tP3 <- table(P3); l3 <- length(tP3)
### Poisson distribution
P1 <- rpois(10000, 1)
P2 <- rpois(10000, 2)
P3 <- rpois(10000, 4)
# Plotting
tP1 <- table(P1); l1 <- length(tP1)
tP2 <- table(P2); l2 <- length(tP2)
tP3 <- table(P3); l3 <- length(tP3)
tP1
P <- cbind (c(tP1, rep(0, l3-l1)),
c(table(P2), rep(0, l3-l2)),
table(P3))
View(P)
View(P)
rownames(P) <- c(1:l3)
barplot(P, beside = TRUE, col = rep(c(2:4), each = l3),
main = "Poisson Distribution", las = 2)
tP1
l3
l1
l2
l4
tP2
# Plotting
tP1 <- table(P1); l1 <- length(tP1)
tP2 <- table(P2); l2 <- length(tP2)
tP3 <- table(P3); l3 <- length(tP3)
P <- cbind (c(tP1, rep(0, l3-l1)),
c(table(P2), rep(0, l3-l2)),
table(P3))
View(P)
View(P)
rep(0, l3-l1)
rownames(P) <- c(1:l3)
View(P)
View(P)
barplot(P, beside = TRUE, col = rep(c(2:4), each = l3),
main = "Poisson Distribution", las = 2)
rownames(P) <- c(1:l3)
barplot(P,  col = rep(c(2:4), each = l3),
main = "Poisson Distribution", las = 2)
rownames(P) <- c(1:l3)
barplot(P, beside = TRUE, col = rep(c(2:4), each = l3),
main = "Poisson Distribution", las = 2)
rownames(P) <- c(1:l3)
barplot(P, beside = TRUE, col = rep(c(2:4)),
main = "Poisson Distribution", las = 2)
rownames(P) <- c(1:l3)
barplot(P, beside = TRUE, col = rep(c(2:4), each = l3),
main = "Poisson Distribution", las = 2)
rownames(P) <- c(1:l3)
barplot(P, beside = TRUE, col = rep(c(2:4), each = l1),
main = "Poisson Distribution", las = 2)
rownames(P) <- c(1:l3)
barplot(P, beside = TRUE, col = rep(c(2:4), each = l3),
main = "Poisson Distribution", las = 2)
barplot(P, beside = TRUE, col = rep(c(2:4), each = l3),
main = "Poisson Distribution", las = 2)
text (7, 1600, c("k = 1"), col = "red", cex = 0.9)
text (24,1200, c("k = 2"), col = "green", cex = 0.9)
text (42, 1000, c("k= 4"), col = "blue",  cex = 0.9)
####  negative binomial
NB1 <- rnbinom(5000, mu = 4, size = 1)
NB2 <- rnbinom(5000, mu = 8, size = 10)
NB3 <- rnbinom(5000, mu = 16, size = 100)
?rnbinom
alternative parametrization via mean
# Plotting
plot(density(NB1), xlab = "", main = "Negative Binomial")
lines(density(NB2), col = "red")
lines(density(NB3), col = "blue")
# Gamma distribution
G1 <- rgamma(n = 5000, shape = 1)
G2 <- rgamma(n = 5000, shape = 2)
G3 <- rgamma(n = 5000, shape = 3)
G1
?rgamma
G2
G3
# Plotting
plot(density(G1), xlab = "", main = "Gamma Distribution")
lines(density(G2), col = "red")
lines(density(G3), col = "blue")
text (2, 0.7, c("shape = 1"), cex = 0.9)
text (3, 0.38, c("shape = 2"), col = "red", cex = 0.9)
text (4.5, 0.25, c("shape = 3"), col = "blue",  cex = 0.9)
Density, distribution function, quantile function and random generation for the Gamma distribution with parameters shape and scale.
shapiro.test(N1)
Density, distribution function, quantile function and random generation for the Gamma distribution with parameters shape and scale.
shapiro.test(N2)
Density, distribution function, quantile function and random generation for the Gamma distribution with parameters shape and scale.
shapiro.test(N3)
N1
shapiro.test(N3)
Density, distribution function, quantile function and random generation for the Gamma distribution with parameters shape and scale.
shapiro.test(N1)
N1
?shapiro.test
shapiro.test(N1)
# pvalue is high indicating that the probability of the data being normal is high
shapiro.test(NB1)
shapiro.test(NB2)
NB1
shapiro.test(N1)
shapiro.test(N2)
shapiro.test(N3)
# pvalue is high indicating that the probability of the data being normal is high
shapiro.test(NB1)
shapiro.test(NB2)
shapiro.test(NB3)
G1
shapiro.test(NB3)
shapiro.test(G1)
shapiro.test(G2)
shapiro.test(N1)
shapiro.test(N2)
shapiro.test(N3)
# pvalue is high indicating that the probability of the data being normal is high
shapiro.test(NB1)
shapiro.test(NB2)
shapiro.test(NB3)
shapiro.test(G1)
shapiro.test(G2)
shapiro.test(G3)
g1 <- c(7,5,7,3,4,5,7,4,1,3)
g2 <- c(8,6,7,9,7,8,5,7,8,4)
myttest <- t.test(g1,g2) # returs the whole test
View(myttest)
names(myttest) # views the output of the test
myttest$statistic # returns the t statistics
myttest$p.value # returns p.value only
## you can change the alternative
t.test(g1,g2, alternative = "two.sided")$p.value # returns p.value only
t.test(g1,g2, alternative = "less")$p.value # returns p.value only
t.test(g1,g2, alternative = "two.sided")
?t.test
## you can change the alternative
t.test(g1,g2, alternative = "two.sided")$p.value # returns p.value only
t.test(g1,g2, alternative = "less")$p.value # returns p.value only
## you can make the data paired
t.test(g1,g2, paired = TRUE)$p.value
notde <- matrix(rnorm(900*10, mean = 10, sd = 2), nrow = 900, ncol = 10) # notDE
gene.ctr1 <- matrix(rnorm(50*5, mean = 10, sd = 2), nrow = 50, ncol = 5) # control
gene.ctr2 <- matrix(rnorm(50*5, mean = 15, sd = 3), nrow = 50, ncol = 5) # control
gene.tr1 <- matrix(rnorm(50*5, mean = 10*2, sd = 2), nrow = 50, ncol = 5) # 2 fold-change in treatment, sd = 2
gene.tr2 <- matrix(rnorm(50*5, mean = 15*2, sd = 3), nrow = 50, ncol = 5)  # 2 fold-change in treatment, sd = 3
data <- rbind (cbind (gene.ctr1, gene.tr1),
cbind (gene.ctr2, gene.tr2),
notde)
View(data)
View(data)
data <- rbind (cbind (gene.ctr1, gene.tr1),
cbind (gene.ctr2, gene.tr2),
notde)
rownames(data) <- paste("gene",1:1000, sep = "_")
colnames(data) <- c(paste("Ctrl", 1:5, sep=""), paste("Treat", 1:5, sep=""))
head (data)
tail(data)
data <- rbind (cbind (gene.ctr1, gene.tr1),
cbind (gene.ctr2, gene.tr2),
)
data <- rbind (cbind (gene.ctr1, gene.tr1),
cbind (gene.ctr2, gene.tr2)
)
gene.ctr1
gene.ctr2
gene.tr2 <- matrix(rnorm(50*5, mean = 15*2, sd = 3), nrow = 50, ncol = 5)  # 2 fold-change in treatment, sd = 3
data <- rbind (cbind (gene.ctr1, gene.tr1),
cbind (gene.ctr2, gene.tr2)
)
rownames(data) <- paste("gene",1:1000, sep = "_")
gene.tr1
gene.ctr2
data <- rbind (cbind (gene.ctr1, gene.tr1),
cbind (gene.ctr2, gene.tr2),
notde)
data <- rbind (cbind (gene.ctr1, gene.tr1),
cbind (gene.ctr2, gene.tr2),
notde)
rownames(data) <- paste("gene",1:1000, sep = "_")
colnames(data) <- c(paste("Ctrl", 1:5, sep=""), paste("Treat", 1:5, sep=""))
colnames(data) <- c(paste("Ctrl", 1:5, sep=""), paste("Treat", 1:5, sep=""))
colnames(data) <- c(paste("Ctrl", 1:5, sep=""), paste("Treat", 1:5, sep=""))
notde <- matrix(rnorm(900*10, mean = 10, sd = 2), nrow = 900, ncol = 10) # notDE
gene.ctr1 <- matrix(rnorm(50*5, mean = 10, sd = 2), nrow = 50, ncol = 5) # control
gene.ctr2 <- matrix(rnorm(50*5, mean = 15, sd = 3), nrow = 50, ncol = 5) # control
gene.tr1 <- matrix(rnorm(50*5, mean = 10*2, sd = 2), nrow = 50, ncol = 5) # 2 fold-change in treatment, sd = 2
gene.tr2 <- matrix(rnorm(50*5, mean = 15*2, sd = 3), nrow = 50, ncol = 5)  # 2 fold-change in treatment, sd = 3
data <- rbind (cbind (gene.ctr1, gene.tr1),
cbind (gene.ctr2, gene.tr2),
notde)
rownames(data) <- paste("gene",1:1000, sep = "_")
colnames(data) <- c(paste("Ctrl", 1:5, sep=""), paste("Treat", 1:5, sep=""))
head (data)
tail(data)
# for one gene
x = data[1,]
t.test(x[1:5], x[6:10])$p.value
# for all genes
significance.test <- apply(data, 1, function (x) {t.test(x[1:5], x[6:10])$p.value})
head(significance.test)
# for all genes
significance.test <- apply(data, 1, function (x) {t.test(x[1:5], x[6:10])$p.value})
head(significance.test)
?significance
?significance.test
?significance.test
?significance.test
??significance.test
# for all genes
significance.test <- apply(data, 1, function (x) {t.test(x[1:5], x[6:10])$p.value})
head(significance.test)
?apply
# DE genes
DE <- names(which(significance.test < 0.05))
head(DE)
length(DE)
text (7, 0.39, c("mean = 4, sd = 1"), cex = 0.9)
text (7, 0.2, c("mean = 4, sd = 2"), col = "red", cex = 0.9)
text (1, 0.1, c("mean = 4, sd = 3"), col = "blue",  cex = 0.9)
### Poisson distribution
P1 <- rpois(10000, 1)
P2 <- rpois(10000, 2)
P3 <- rpois(10000, 4)
# Plotting
tP1 <- table(P1); l1 <- length(tP1)
tP2 <- table(P2); l2 <- length(tP2)
tP3 <- table(P3); l3 <- length(tP3)
P <- cbind (c(tP1, rep(0, l3-l1)),
c(table(P2), rep(0, l3-l2)),
table(P3))
rownames(P) <- c(1:l3)
barplot(P, beside = TRUE, col = rep(c(2:4), each = l3),
main = "Poisson Distribution", las = 2)
text (7, 1600, c("k = 1"), col = "red", cex = 0.9)
text (24,1200, c("k = 2"), col = "green", cex = 0.9)
text (42, 1000, c("k= 4"), col = "blue",  cex = 0.9)
####  negative binomial
NB1 <- rnbinom(5000, mu = 4, size = 1)
NB2 <- rnbinom(5000, mu = 8, size = 10)
NB3 <- rnbinom(5000, mu = 16, size = 100)
# Plotting
plot(density(NB1), xlab = "", main = "Negative Binomial")
lines(density(NB2), col = "red")
lines(density(NB3), col = "blue")
text (12, 0.15, c("mu = 4, size = 1"), cex = 0.9)
text (20, 0.11, c("mu = 8, size = 10"), col = "red", cex = 0.9)
text (35, 0.07, c("mu = 20, size = 100"), col = "blue",  cex = 0.9)
# Gamma distribution
G1 <- rgamma(n = 5000, shape = 1)
G2 <- rgamma(n = 5000, shape = 2)
G3 <- rgamma(n = 5000, shape = 3)
# Plotting
plot(density(G1), xlab = "", main = "Gamma Distribution")
lines(density(G2), col = "red")
lines(density(G3), col = "blue")
# Plotting
plot(density(G1), xlab = "", main = "Gamma Distribution")
lines(density(G2), col = "red")
lines(density(G3), col = "blue")
text (2, 0.7, c("shape = 1"), cex = 0.9)
text (3, 0.38, c("shape = 2"), col = "red", cex = 0.9)
text (4.5, 0.25, c("shape = 3"), col = "blue",  cex = 0.9)
shapiro.test(N1)
shapiro.test(N2)
shapiro.test(N3)
shapiro.test(N1)
shapiro.test(N2)
shapiro.test(N3)
# pvalue is high indicating that the probability of the data being normal is high
shapiro.test(NB1)
shapiro.test(NB2)
shapiro.test(NB3)
shapiro.test(G1)
shapiro.test(G2)
shapiro.test(G3)
g1 <- c(7,5,7,3,4,5,7,4,1,3)
g2 <- c(8,6,7,9,7,8,5,7,8,4)
myttest <- t.test(g1,g2) # returs the whole test
names(myttest) # views the output of the test
myttest$statistic # returns the t statistics
myttest$p.value # returns p.value only
myttest
?t.test
## you can change the alternative
t.test(g1,g2, alternative = "two.sided")$p.value # returns p.value only
t.test(g1,g2, alternative = "less")$p.value # returns p.value only
## you can make the data paired
t.test(g1,g2, paired = TRUE)$p.value
## you can make the data paired
t.test(g1,g2, paired = TRUE)$p.value
# for all genes
significance.test <- apply(data, 1, function (x) {t.test(x[1:5], x[6:10])$p.value})
head(significance.test)
# DE genes
DE <- names(which(significance.test < 0.05))
head(DE)
length(DE)
# How many true positive
length(which(is.element(DE, paste("gene",1:100, sep = "_"))))
# How many false positives
length(which(is.element(DE, paste("gene",101:1000, sep = "_"))))
which(is.element(DE, paste("gene",1:100, sep = "_")))
